name: Mirror XML to Cloudflare Pages

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
  workflow_run:
    workflows: ["Build Kaspi XML"]
    types: [completed]

concurrency:
  group: mirror-to-cf-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # If triggered by workflow_run (Build Kaspi XML finished), force deploy.
      # If triggered by push, only deploy when /docs actually changed.
      - name: Determine if we should deploy
        id: gate
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "‚öë Trigger is workflow_run ‚Äî forcing deployment."
          else
            if git diff --quiet HEAD^ HEAD -- docs/; then
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "üü° No changes detected in /docs ‚Äî skipping deployment."
            else
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "‚úÖ Changes detected ‚Äî proceeding with deployment."
            fi
          fi

      - name: Deploy /docs to Cloudflare Pages (Wrangler v3, with retry)
        if: steps.gate.outputs.changed == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          set -e
          npm install -g wrangler@3
          for attempt in 1 2 3; do
            echo "Deploy attempt $attempt..."
            if wrangler pages deploy docs --project-name="${{ secrets.CF_PROJECT_NAME }}" --branch=main; then
              echo "‚úÖ Deploy succeeded."
              exit 0
            fi
            echo "‚ö†Ô∏è Deploy failed, retrying in 10s..."
            sleep 10
          done
          echo "‚ùå Deploy failed after retries."
          exit 1

      - name: Wait for CDN propagation
        if: steps.gate.outputs.changed == 'true'
        run: sleep 20

      - name: Verify price.xml availability
        if: steps.gate.outputs.changed == 'true'
        shell: bash
        env:
          URL: https://kaspi-stock-mirror.pages.dev/price.xml
        run: |
          set -euo pipefail
          echo "üîé Checking $URL"
          for i in {1..10}; do
            echo "Attempt $i..."
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$URL" || true)
            if [[ "$STATUS" == "200" ]]; then
              echo "‚úÖ price.xml available (HTTP $STATUS)"
              exit 0
            fi
            echo "Still not ready (HTTP $STATUS). Waiting..."
            sleep 10
          done
          echo "‚ùå price.xml not reachable after retries"
          exit 1

      - name: Done
        if: steps.gate.outputs.changed == 'true'
        run: echo "‚úÖ Cloudflare mirror deployed and verified successfully."

      - name: Skipped
        if: steps.gate.outputs.changed != 'true'
        run: echo "‚è≠Ô∏è No changes to deploy ‚Äî workflow finished cleanly."
